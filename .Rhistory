ggmap(chicago)
??ggmap
library(XLConnect)
library(XLConnect)
ff <-readWorksheetFromFile("FFDraft2015.xlsx")
ff <-readWorksheetFromFile("FFDraft2015.xlsx",sheet=1)
ff
?<<-
x=matrix[1:12,3,4]
x<-matrix[1:12,3,4]
x<-matrix(1:12,3,4)
x
x(3,1)
x[3,1]
x[2,]
x[,2]
?[]
x[i=3,j=1]
x[j=3,i=1]
x<-matrix(1:24,3,4,2)
x
x[1,]
x[2,]
x[,1]
x[,3]
x[,,1]
?matrix
getwd()
dir()
x = rnorm(100,mean=rep(1:5),each=20,sd=.2)
x = rnorm(100,mean=rep(1:5,each=20),sd=.2)
x
y = rnorm(100,mean=rep(1:4,each=25),sd=.15)
x = rnorm(100,mean=rep(1:5,each=20),sd=.2)
dataframe=data.frame(x,y)
plot (x,y)
distxy = dist(dataframe)
distxy
hcl = hclust(distxy)
plot(hcl)
set.seed (1234)
x = rnorm(50,mean=rep(1:5,each=10),sd=.2)
y = rnorm(60,mean=rep(1:4,each=15),sd=.25)
plot(x,y)
plot(x=x,y=y)
set.seed (1234)
x = rnorm(60,mean=rep(1:5,each=10),sd=.2)
y = rnorm(60,mean=rep(1:4,each=15),sd=.25)
plot(x,y)
distxy=dist(x,y)
df = data.frame(x,y)
distxy=dist(x,y)
distxy=dist(df)
hc = hclust(df)
hc = hclust(distxy)
plot (hc)
str(hc)
?hclust
plot(hc,hang=-1)
plot(hc,hang=3)
plot(hc,hang=5)
plot(hc,hang=10)
plot(hc,hang=-5)
?plot
pie(hc)
pie(xydist)
pie(distxy)
pie(hc)
pie(x)
pie(y)
pie(c(1,2,3,4))
pie(c(1,2,3,4,2))
set.seed (1234)
x = rnorm(60,mean=rep(1:5,each=10),sd=.2)
y = rnorm(60,mean=rep(1:4,each=15),sd=.25)
df = data.frame(x,y)
distxy=dist(df)
hc = hclust(distxy)
plot(hc)
setwd("~/GitHub/RepData_PeerAssessment1")
dir ()
setwd("~/GitHub/RepData_PeerAssessment1")
dir ()
UrlName<-"http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
zipfile<- "zipfile.zip"
# don't download file if we have already
if (!file.exists(zipfile)) {
fileUrl <- UrlName
download.file(fileUrl,destfile=zipfile)
dateDownloaded<-date()
dateDownloaded
#
# Extract the downloaded zip file
#
unzip(zipfile)
}
dir()
read.csv (zipfile.zip)
dir()
unzip(zipfile)
dir()
ActivityData = read.csv (activity.csv)
ActivityData = read.csv ("activity.csv")
dim(ActivityData)
summary(ActivityData)
head(ActivityData)
tail(ActivityData)
tail(ActivityData)
head(ActivityData,count=100)
?head
head(ActivityData,100)
head(ActivityData,1000)
tapply (ActivityData$steps,FUN=mean)
?tapply
?aggregate
aggregate(ActivityData,by=steps,FUN="mean")
?apply
apply(ActivityData,2,mean)
apply(ActivityData$steps,2,mean)
apply(ActivityData$steps,1,mean)
?lapply
lapply(ActivityData$steps,mean)
lapply(ActivityDat,mean)
lapply(ActivityData,mean)
summary(ActivityData)
summary(ActivityData$steps)
summary.mean(ActivityData$steps)
summary(ActivityData$steps)[mean]
summary(ActivityData$steps)[summary$mean]
str(summary(ActivityData$steps))
str(ActivityData$steps)
str(ActivityData)
aggregate(ActivityData$steps,by=date,FUN="mean")
aggregate(ActivityData$steps,by=c(date),FUN="mean")
aggregate(. ~ , data = iris, mean)
aggregate(. ~ date, data = ActivityData, mean)
.
aggregate(., data = ActivityData, mean)
aggregate(. ~ ., data = ActivityData, mean)
colMeans(ActivityData)
colMeans(ActivityData$steps)
colMeans(as.numeric(ActivityData$steps)
)
colMeans(as.numeric(ActivityData))
mean(as.numeric(ActivityData))
mean(as.numeric(ActivityData$steps))
mean(as.numeric(ActivityData$steps))
?mean
mean(as.numeric(ActivityData$steps),na.rm=T)
median(as.numeric(ActivityData$steps),na.rm=T)
hist(ActivityData$steps)
hist(ActivityData$steps,59)
hist(ActivityData$steps,20)
hist(ActivityData$steps*288,20)
hist(ActivityData$steps*10,20)
hist(ActivityData$steps,20)
plot(ActivityData$steps)
plot(ActivityData$steps,ActivityData$date)
mean(as.numeric(ActivityData$steps),na.rm=T)*288
mean(as.numeric(ActivityData$steps),na.rm=T)*288
summary(ActivityData)
DailySteps =  aggregate(x = ActivityData$steps , by = list(ActivityData$date), FUN = sum ,na.rm=TRUE)
DailySteps
plot(DailySteps)
mean(DailySteps$Group.1)
mean(DailySteps$x)
median(DailySteps$x)
names(DailySteps) <- c("Date","Daily.Steps")
mean(DailySteps$Daily.Steps)
print(mean(DailySteps$Daily.Steps))
print("Mean number of daily steps - " +mean(DailySteps$Daily.Steps))
print("Mean number of daily steps - "  & mean(DailySteps$Daily.Steps))
print(c("Mean number of daily steps - ", mean(DailySteps$Daily.Steps))
)
hist(DailySteps$Daily.Steps)
hist(DailySteps$Daily.Steps.20)
hist(DailySteps$Daily.Steps,20)
hist(DailySteps$Daily.Steps,10)
hist(DailySteps$Daily.Steps,15)
hist(DailySteps$Daily.Steps,15,xlab="Daily steps")
hist(DailySteps$Daily.Steps,15,xlab="Daily steps",title="whatever")
hist(DailySteps$Daily.Steps,15,xlab="Daily steps")
```{r}
hist(DailySteps$Daily.Steps.20)
hist(DailySteps$Daily.Steps)
hist(DailySteps$Daily.Steps.20)
hist(DailySteps$Daily.Steps,20)
hist(DailySteps$Daily.Steps,15)
hist(DailySteps$Daily.Steps,15, xlab="Average daily steps")
?hist
hist(DailySteps$Daily.Steps,15, xlab="Average daily steps",main="Histogram of Daily Steps")
hist(DailySteps$Daily.Steps,15, xlab="Mean daily steps",main="Histogram of Daily Steps")
library(ggplot2)
TimeSeries = aggregate(x = ActivityData$steps, by = list(ActivityData$interval), FUN = mean, na.rm = TRUE )
head TimeSeries
head (TimeSeries)
names(DailySteps) <- c("Interval","Mean.Daily.Steps")
names(TimeSeries) <- c("Interval","Mean.Daily.Steps")
plot(TimeSeries$Interval,TimeSeries$Mean.Daily.Steps)
plot(TimeSeries$Interval,TimeSeries$Mean.Daily.Steps,line())
plot(TimeSeries$Interval,TimeSeries$Mean.Daily.Steps)
ggplot(average.steps.by.interval,aes(interval,steps)) +
ggtitle("Time Series Plot of Average Steps by Interval") +
geom_line()
names(TimeSeries) <- c("Interval","Steps")
ggplot(TimeSeries,aes(Interval,Steps)) +
ggtitle("Time Series Plot - Mean Steps by Interval") +
geom_line()
max(TimeSeries$Steps)
round(max(TimeSeries$Steps))
round(max(TimeSeries$Steps),1)
TimeSeries[TimeSeries$Steps]>206.1,0
TimeSeries[TimeSeries$Steps]>206.1,]
TimeSeries[(TimeSeries$Steps]>206.1),]
TimeSeries[TimeSeries$Steps>206.1,]
x=(max(TimeSeries$Steps))
TimeSeries[TimeSeries$Steps==x,]
```
?print
Print()
print()
print ("Maximum steps are " MaxSteps)
print ("Maximum steps are " +MaxSteps)
MaxSteps = max(TimeSeries$Steps)
print ("Maximum steps are " +MaxSteps)
print ("Maximum steps are " & MaxSteps)
print (c("Maximum steps are ",MaxSteps)
print (c("Maximum steps are ",MaxSteps))
print (c("Maximum steps are ",MaxSteps))
lprint (c("Maximum steps are ",MaxSteps))
cat("Maximum steps are ",MaxSteps)
cat("Maximum steps are",MaxSteps)
cat("Maximum steps are",round(MaxSteps))
cat("Maximum steps are",round(MaxSteps), "occuring in interval")
int=TimeSeries[TimeSeries$Steps==MaxSteps,]
int[,2]
int[,1]
cat("Maximum steps are",round(MaxSteps), "occuring in interval", int[,1])
nrow(ActivityData[is.na(Activity$steps),])
nrow(ActivityData[is.na(ActActivityData$steps),])
nrow(ActivityData[is.na(ActivityData$steps),])
nrow(ActivityData[is.na(ActivityData$interval),])
nrow(ActivityData[is.na(ActivityData$steps),])
nrow(ActivityData[is.na(ActivityData$steps),])
nrow(ActivityData[is.na(ActivityData$steps),])/1000
nrow(ActivityData[is.na(ActivityData$steps),])/nrow(ActivityData)
nrow(ActivityData)
nrow(ActivityData)
print (c("Maximum steps are ",MaxSteps)
;
percent (1/2)
percent_format (1/2)
percent_format () (1/2)
?percent_format
library(scales)
percent (1/2)
percent (1/2.1)
print (c("Maximum steps are ",MaxSteps)
;
cat("This represents",percent(nrow(ActivityData[is.na(ActivityData$steps),])))
cat("This represents",percent(nrow(ActivityData[is.na(ActivityData$steps),])/nrow(ActivityData[])))
nrow(ActivityData[is.na(ActivityData$steps),])/nrow(ActivityData)
cat("This represents",percent(nrow(ActivityData[is.na(ActivityData$steps),])/nrow(ActivityData[])))
cat("This represents",percent(nrow(ActivityData[is.na(ActivityData$steps),])/
nrow(ActivityData[])),"of the total")
ActivityData.ImputedSteps <- merge(ActivityData, TimeSeries, by = "Interval", all.x = TRUE)
summary(ActivityData)
ActivityData.ImputedSteps <- merge(ActivityData, TimeSeries, by.x = "interval", by.y = "Interval", all.x = TRUE)
head(ActivityData)
ActivityData.ImputedSteps = merge(ActivityData, TimeSeries, by.x = "interval", by.y = "Interval", all.x = TRUE)
ActivityData.ImputedSteps
ActivityData$ImputedSteps <- merge(ActivityData, TimeSeries, by.x = "interval", by.y = "Interval", all.x = TRUE)
head(ActivityData)
dim(ActivityData)
ggplot(test_data, aes(date)) +
geom_line(aes(y = var0, colour = "var0")) +
geom_line(aes(y = var1, colour = "var1"))
ActivityData = read.csv ("activity.csv")
View(ActivityData.ImputedSteps)
ActivityData.ImputedSteps = merge(ActivityData, TimeSeries, by.x = "interval", by.y = "Interval", all.x = TRUE)
summary(ActivityData.ImputedSteps)
hist(ActivityData.ImputedSteps)
hist(ActivityData.ImputedSteps$steps)
hist(ActivityData.ImputedSteps$steps.15)
hist(ActivityData.ImputedSteps$steps,15)
DailyStepsImputed =  aggregate(x = ActivityData.ImputedSteps$Steps , by =     list(ActivityData.ImputedSteps$date), FUN = sum ,na.rm=TRUE)
names(DailySteps) <- c("Date","Imputed.Steps")
hist(DailyStepsImputed)
hist(DailyStepsImputed$x)
hist(DailyStepsImputed$Group.1)
DailyStepsImputed
DailyStepsImputed =  aggregate(x = ActivityData.ImputedSteps$Steps , by =     list(ActivityData.ImputedSteps$date), FUN = sum ,na.rm=TRUE)
names(DailySteps) <- c("Date","Imputed.Steps")
ActivityData.ImputedSteps
ActivityData.ImputedSteps[is.na(ActivityData.ImputedSteps$steps),c("steps.x")] <- ActivityData.ImputedSteps[is.na(ActivityData.ImputedSteps$steps),c("steps.y")]
ActivityData.ImputedSteps[is.na(ActivityData.ImputedSteps$steps),c("steps")] <- ActivityData.ImputedSteps[is.na(ActivityData.ImputedSteps$steps),c("Steps")]
head(ActivityData.ImputedSteps)
head(ActivityData)
head(ActivityData.ImputedSteps)
DailySteps.Imputed =  aggregate(x = ActivityData.ImputedSteps$steps , by =     list(ActivityData.ImputedSteps$date), FUN = sum ,na.rm=TRUE)
names(DailySteps.Imputed) <- c("Date","Daily.Steps")
mean(DailySteps.Imputed$Daily.Steps)
median(DailySteps.Imputed$Daily.Steps)
hist(DailySteps.Imputed$Daily.Steps,15, xlab="Mean daily steps (imputed)",main="Histogram of Daily Steps (Imputed")
hist(DailySteps$Daily.Steps,15, xlab="Mean daily steps",main="Histogram of Daily Steps")
hist(DailySteps$Daily.Steps,15, xlab="Mean daily steps",main="Histogram of Daily Steps")
hist(DailySteps$Daily.Steps,15, xlab="Mean daily steps",main="Histogram of Daily Steps")
DailySteps
mean(DailySteps$Daily.Steps)
str(DailySteps)
DailySteps = ""
mean(DailySteps$Daily.Steps)
DailySteps =  aggregate(x = ActivityData$steps , by =     list(ActivityData$date), FUN = sum
,na.rm=TRUE)
mean(DailySteps$Daily.Steps)
str(DailySteps)
names(DailySteps) <- c("Date","Daily.Steps")
mean(DailySteps$Daily.Steps)
weekdays(ActivityData.ImputedSteps$date)
weekdays(as.date(ActivityData.ImputedSteps$date)
)
as.date ('11-1-2015')
as.Date.date ('11-1-2015')
as.Date ('11-1-2015')
as.Date.date ('11-1-2015')
head(ActivityData.ImputedSteps)
as.Date.date ('2015-11-12')
as.Date ('2015-11-12')
weekdays(as.Date(ActivityData.ImputedSteps$date)
)
x=weekdays(as.Date(ActivityData.ImputedSteps$date)
)
x
?weekend
library(chron)
x <- seq(Sys.Date()-10, Sys.Date(), by = 1)
x[is.weekend(x)]
library(chron)
x=(as.Date(ActivityData.ImputedSteps$date))
x[is.weekend(x)]
ActivityData.ImputedSteps.isWeekend=rbind(ActivityData.ImputedSteps,ifelse())
ActivityData.ImputedSteps.isWeekend=rbind(ActivityData.ImputedSteps,ifelse())
ActivityData.ImputedSteps$weekday = as.factor(ifelse(weekdays(as.date(ActivityData.ImputedSteps$date)) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
ActivityData.ImputedSteps$weekday = as.factor(ifelse(weekdays(as.Date(ActivityData.ImputedSteps$date)) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
summary(ActivityData.ImputedSteps)
DailySteps.ImputedDOW =  aggregate(x = ActivityData.ImputedSteps$steps ,
by = list(ActivityData.ImputedSteps$date,ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
names(DailySteps.Imputed) <- c("Date","Daily.Steps")
DailySteps.ImputedDOW =  aggregate(x = ActivityData.ImputedSteps$steps ,
by = list(ActivityData.ImputedSteps$date,ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
names(DailySteps.Imputed) <- c("Date","Daily.Steps")
head(DailySteps.ImputedDOW)
+                                 by = list(ActivityData.ImputedSteps$date,ActivityData.ImputedSteps$weekday),
DailySteps.ImputedDOW =
aggregate(x = ActivityData.ImputedSteps$steps
by = list(ActivityData.ImputedSteps$date+ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
DailySteps.ImputedDOW =
aggregate(x = ActivityData.ImputedSteps$steps
by = list(ActivityData.ImputedSteps$date,ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
DailySteps.ImputedDOW =
aggregate(x = ActivityData.ImputedSteps$steps,
by = list(ActivityData.ImputedSteps$date,ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
DailySteps.ImputedDOW
StepsbyInterval.Weekday.Weekend =
aggregate(x = ActivityData.ImputedSteps$steps,
by = list(ActivityData.ImputedSteps$interval,
ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
StepsbyInterval.Weekday.Weekend
hist(StepsbyInterval.Weekday.Weekend)
hist(StepsbyInterval.Weekday.Weekend$x)
names(StepsbyInterval.Weekday.Weekend) = ("Interval", "Weekend",Steps)
names(StepsbyInterval.Weekday.Weekend) = ("Interval", "Weekend","Steps")
names(StepsbyInterval.Weekday.Weekend) = c("Interval", "Weekend","Steps")
WeekDaySteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$weekend=="Weekday",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$weekend=="Weekend",]
WeekDaySteps
WeekDaySteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$weekend=="weekday",]
WeekDaySteps
WeekEndSteps
StepsbyInterval.Weekday.Weekend
WeekDaySteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$weekend=="Weekday",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$weekend=="Weekend",]
WeekEndSteps
WeekDaySteps
StepsbyInterval.Weekday.Weekend
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps
WeekDaySteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekday",]
WeekDaySteps
ggplot() + geom_line(data=WeekDaySteps, aes (x=Date,y=Interval)
)
str(WeekDaySteps)
ggplot() + geom_line(data=WeekDaySteps, aes (x=Interval,y=Steps)
)
ggplot() + geom_line(data=WeekDaySteps, aes (x=Interval,y=Steps) +
geom_line (data=WeekEndSteps, aes (x=Interval,y=Steps))
)
ggplot() + geom_line(data=WeekDaySteps, aes (x=Interval,y=Steps)) +
geom_line (data=WeekEndSteps, aes (x=Interval,y=Steps))
ggplot() + geom_line(data=WeekDaySteps, aes (x=Interval,y=Steps,color="Red")) +
geom_line (data=WeekEndSteps, aes (x=Interval,y=Steps))
aggregate(x = ActivityData.ImputedSteps$steps,
by = list(ActivityData.ImputedSteps$interval,
ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
aggregate(x = ActivityData.ImputedSteps$steps,
.
StepsbyInterval.Weekday.Weekend =x
StepsbyInterval.Weekday.Weekend =
aggregate(x = ActivityData.ImputedSteps$steps,
by = list(ActivityData.ImputedSteps$interval,
ActivityData.ImputedSteps$weekday),
FUN = sum ,na.rm=TRUE)
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
ggplot() + geom_line(data=WeekDaySteps, aes (x=Interval,y=Steps)) +
geom_line (data=WeekEndSteps, aes (x=Interval,y=Steps))
geom_line (data=WeekEndSteps, aes (x=Interval,y=Steps))
ggplot() + geom_line(data=WeekDaySteps, aes     (x=Interval,y=Steps,color="Red")) +
geom_line (data=WeekEndSteps, aes (x=Interval,y=Steps, color="blue"))
WeekDaySteps
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps,color="Red")) +
geom_line (data=WeekEndSteps, aes(x=Interval,y=Steps, color="blue"))
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps,color="Red"))
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps,color="Red")) +
geom_line(data=WeekEndSteps,aes(x=Interval, y=Steps))
str(WeekEndSteps)
WeekDaySteps = StepsbyInterval.Weekday.Weekend
[StepsbyInterval.Weekday.Weekend$Weekend=="Weekday",]
WeekDaySteps = StepsbyInterval.Weekday.Weekend
[StepsbyInterval.Weekday.Weekend$Weekend=="Weekday",]
WeekDaySteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekday",]
str(WeekEndSteps)
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps,color="Red")) +
geom_line (data=WeekEndSteps, aes(x=Interval,y=Steps, color="blue"))
str(WeekEndSteps)
str(WeekDaySteps)
StepsbyInterval.Weekday.Weekend
str(StepsbyInterval.Weekday.Weekend)
str(StepsbyInterval.Weekday.Weekend)
names(StepsbyInterval.Weekday.Weekend) = c("Interval"."weekend","Steps")
names(StepsbyInterval.Weekday.Weekend) = c("Interval","weekend","Steps")
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekDaySteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekday",]
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps,color="Red")) +
geom_line (data=WeekEndSteps, aes(x=Interval,y=Steps, color="blue"))
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps,color="Red"))
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps))
ggplot() + geom_line(data=WeekEndSteps,
aes (x=Interval,y=Steps))
WeekDaySteps
ggplot() + geom_line(data=WeekDaySteps,
aes (x=Interval,y=Steps))
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
StepsbyInterval.Weekday.Weekend
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
StepsbyInterval.Weekday.Weekend
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeedEndSteps
WeekEndSteps
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend<>"Weekend",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="WeekEnd",]
WeekEndSteps
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="WeekEnd",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend>"Weekend",]
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps
WeekEndSteps = StepsbyInterval.Weekday.Weekend[StepsbyInterval.Weekday.Weekend$Weekend=="Weekend",]
WeekEndSteps
WeekEndSteps
str(WeekEndSteps)
